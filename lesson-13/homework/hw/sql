SET NOCOUNT ON;

-- =========================================
-- EASY
-- =========================================

-- 1) "100-Steven King" (emp_id + first_name + last_name)
--    общий вариант для всех строк + пример для emp_id = 100
SELECT CONCAT(emp_id, '-', first_name, ' ', last_name) AS EmpFmt
FROM dbo.Employees;
-- пример конкретно для 100:
-- SELECT CONCAT(emp_id, '-', first_name, ' ', last_name) AS EmpFmt
-- FROM dbo.Employees WHERE emp_id = 100;
GO

-- 2) Обновить подстроку '124' -> '999' в phone_number
UPDATE dbo.Employees
SET phone_number = REPLACE(phone_number, '124', '999');
GO

-- 3) Имя и длина имени для тех, кто начинается на A/J/M. Отсортировать по first_name
SELECT
  first_name AS FirstName,
  LEN(first_name) AS FirstNameLen
FROM dbo.Employees
WHERE first_name LIKE '[AJM]%'
ORDER BY first_name;
GO

-- 4) Общая зарплата по каждому manager_id
SELECT manager_id, SUM(salary) AS TotalSalary
FROM dbo.Employees
GROUP BY manager_id;
GO

-- 5) По каждой строке TestMax взять год и максимум из Max1/Max2/Max3
-- (через CROSS APPLY, работает на любой версии SQL Server)
SELECT t.[Year],
       MAX(v.val) AS MaxOfRow
FROM dbo.TestMax AS t
CROSS APPLY (VALUES (t.Max1), (t.Max2), (t.Max3)) AS v(val)
GROUP BY t.[Year];
GO

-- 6) Фильмы с нечётным id и описанием, которое не "boring"
SELECT *
FROM dbo.cinema
WHERE id % 2 = 1
  AND (description IS NOT NULL AND description NOT LIKE '%boring%');
GO

-- 7) Отсортировать по Id, но 0 — всегда последним (один столбец в ORDER BY)
SELECT *
FROM dbo.SingleOrder
ORDER BY CASE WHEN Id = 0 THEN 2147483647 ELSE Id END;
GO

-- 8) Первый ненулевой из набора колонок (если все NULL — вернётся NULL)
-- пример: person(col1, col2, col3)
SELECT COALESCE(col1, col2, col3) AS FirstNonNull
FROM dbo.person;
GO


-- =========================================
-- MEDIUM
-- =========================================

-- 1) Разбить FullName на First/Middle/Last (Students)
-- Поддерживает до 3 частей; если часть отсутствует — будет NULL
SELECT
  FullName,
  PARSENAME(REPLACE(FullName, ' ', '.'), 3) AS FirstName,
  PARSENAME(REPLACE(FullName, ' ', '.'), 2) AS MiddleName,
  PARSENAME(REPLACE(FullName, ' ', '.'), 1) AS LastName
FROM dbo.Students;
GO

-- 2) Для каждого клиента, у кого БЫЛА доставка в California,
--    показать его заказы, которые доставлялись в Texas (Orders)
-- Предположим колонка DeliveryState (замени на свою: ShipState и т.п.)
WITH CaCustomers AS (
  SELECT DISTINCT CustomerID
  FROM dbo.Orders
  WHERE DeliveryState = 'CA'
)
SELECT o.*
FROM dbo.Orders AS o
JOIN CaCustomers AS c ON c.CustomerID = o.CustomerID
WHERE o.DeliveryState = 'TX';
GO

-- 3) Групповая конкатенация значений (DMLTable)
-- Предположим колонка Val
SELECT STRING_AGG(Val, ',') AS ConcatenatedValues
FROM dbo.DMLTable;
GO

-- 4) Сотрудники, у кого склейка first+last содержит букву 'a' >= 3 раз
SELECT *
FROM dbo.Employees
WHERE (
  LEN(LOWER(CONCAT(first_name, last_name)))
  - LEN(REPLACE(LOWER(CONCAT(first_name, last_name)), 'a', ''))
) >= 3;
GO

-- 5) Кол-во сотрудников в каждом департаменте и %
--    тех, кто работает > 3 лет
SELECT
  department_id,
  COUNT(*) AS EmpCount,
  CAST(100.0 * AVG(CASE WHEN DATEDIFF(YEAR, hire_date, GETDATE()) > 3 THEN 1.0 ELSE 0.0 END) AS DECIMAL(5,2))
    AS PctTenureGT3Y
FROM dbo.Employees
GROUP BY department_id;
GO

